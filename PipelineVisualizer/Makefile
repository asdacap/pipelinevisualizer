#############################################################################
# Makefile for building: libPVisualizer.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.1) on: Tue Mar 1 14:53:59 2011
# Project:  PipelineVisualizer.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -o Makefile PipelineVisualizer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_MULTIMEDIA_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtMultimedia -I/usr/include -I/usr/local/qwt-5.2.1/include -I../fftw-3.2.2/api -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared -Wl,-soname,libPVisualizer.so.1
LIBS          = $(SUBLIBS)   -L/home/amirul/PipelineVisualizer/PipelineVisualizer/../../../../usr/local/qwt-5.2.1/lib/ -lqwt -L/home/amirul/PipelineVisualizer/PipelineVisualizer/../fftw-3.2.2/.libs/ -lfftw3 -lQtMultimedia -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../temp/

####### Files

SOURCES       = pvisual.cpp \
		pipefeed.cpp \
		pipetarget.cpp \
		processgraphics.cpp \
		targetcollection.cpp \
		pipeprovider.cpp \
		pipeproviderprovider.cpp \
		signalprocessor.cpp \
		soundsink.cpp \
		soundfeeder.cpp \
		constSetting.cpp \
		util.cpp \
		doublegenerator.cpp \
		simplelinegraph.cpp \
		booleangenerator.cpp \
		counterkeeper.cpp \
		graphabstraction.cpp \
		signalpipefeed.cpp \
		signalpipeprovider.cpp \
		signalpipetarget.cpp \
		doublepipetarget.cpp \
		doublepipeprovider.cpp \
		doublepipefeed.cpp \
		booleanpipetarget.cpp \
		booleanpipeprovider.cpp \
		booleanpipefeed.cpp \
		variabledoublegeneratorprovider.cpp \
		variabledoublegeneratorproviderdialog.cpp \
		signalscaler.cpp \
		booleangeneratorprovider.cpp \
		conditionaloutputsignalpipe.cpp \
		widgetedprocessgraphics.cpp \
		graphabstractionprovider.cpp \
		graphicproxywidgetgraphhack.cpp \
		conditionalinputsignalpipe.cpp \
		periodiclistformatter.cpp \
		sppropertydialog.cpp \
		hammingwindowmultiplysp.cpp \
		signalblockbuilder.cpp \
		blockgenerator.cpp \
		constantdoublegeneratorprovider.cpp \
		multivectorfunctionpipe.cpp \
		selectivevaluepipe.cpp \
		hammingwindowdividesp.cpp \
		blocknormalizer.cpp \
		fftprocessor.cpp \
		doubleindexvector.cpp \
		signalexpander.cpp \
		fftrectangulartopolarconverter.cpp \
		fftpolartorectangularconverter.cpp \
		inversefftprocessor.cpp \
		selectivesignalelimination.cpp \
		vectorfunctionpipe.cpp \
		pinknoiseremover.cpp \
		functionpipe.cpp \
		signalpipe.cpp \
		linearrow.cpp \
		simpleprocessgraphicsprovidertemplate.cpp \
		blocklengthsender.cpp \
		doublemultiply.cpp \
		harmoniccalculator.cpp moc_processgraphics.cpp \
		moc_soundsink.cpp \
		moc_soundfeeder.cpp \
		moc_doublegenerator.cpp \
		moc_simplelinegraph.cpp \
		moc_booleangenerator.cpp \
		moc_variabledoublegeneratorproviderdialog.cpp \
		moc_widgetedprocessgraphics.cpp \
		moc_sppropertydialog.cpp
OBJECTS       = ../temp/pvisual.o \
		../temp/pipefeed.o \
		../temp/pipetarget.o \
		../temp/processgraphics.o \
		../temp/targetcollection.o \
		../temp/pipeprovider.o \
		../temp/pipeproviderprovider.o \
		../temp/signalprocessor.o \
		../temp/soundsink.o \
		../temp/soundfeeder.o \
		../temp/constSetting.o \
		../temp/util.o \
		../temp/doublegenerator.o \
		../temp/simplelinegraph.o \
		../temp/booleangenerator.o \
		../temp/counterkeeper.o \
		../temp/graphabstraction.o \
		../temp/signalpipefeed.o \
		../temp/signalpipeprovider.o \
		../temp/signalpipetarget.o \
		../temp/doublepipetarget.o \
		../temp/doublepipeprovider.o \
		../temp/doublepipefeed.o \
		../temp/booleanpipetarget.o \
		../temp/booleanpipeprovider.o \
		../temp/booleanpipefeed.o \
		../temp/variabledoublegeneratorprovider.o \
		../temp/variabledoublegeneratorproviderdialog.o \
		../temp/signalscaler.o \
		../temp/booleangeneratorprovider.o \
		../temp/conditionaloutputsignalpipe.o \
		../temp/widgetedprocessgraphics.o \
		../temp/graphabstractionprovider.o \
		../temp/graphicproxywidgetgraphhack.o \
		../temp/conditionalinputsignalpipe.o \
		../temp/periodiclistformatter.o \
		../temp/sppropertydialog.o \
		../temp/hammingwindowmultiplysp.o \
		../temp/signalblockbuilder.o \
		../temp/blockgenerator.o \
		../temp/constantdoublegeneratorprovider.o \
		../temp/multivectorfunctionpipe.o \
		../temp/selectivevaluepipe.o \
		../temp/hammingwindowdividesp.o \
		../temp/blocknormalizer.o \
		../temp/fftprocessor.o \
		../temp/doubleindexvector.o \
		../temp/signalexpander.o \
		../temp/fftrectangulartopolarconverter.o \
		../temp/fftpolartorectangularconverter.o \
		../temp/inversefftprocessor.o \
		../temp/selectivesignalelimination.o \
		../temp/vectorfunctionpipe.o \
		../temp/pinknoiseremover.o \
		../temp/functionpipe.o \
		../temp/signalpipe.o \
		../temp/linearrow.o \
		../temp/simpleprocessgraphicsprovidertemplate.o \
		../temp/blocklengthsender.o \
		../temp/doublemultiply.o \
		../temp/harmoniccalculator.o \
		../temp/moc_processgraphics.o \
		../temp/moc_soundsink.o \
		../temp/moc_soundfeeder.o \
		../temp/moc_doublegenerator.o \
		../temp/moc_simplelinegraph.o \
		../temp/moc_booleangenerator.o \
		../temp/moc_variabledoublegeneratorproviderdialog.o \
		../temp/moc_widgetedprocessgraphics.o \
		../temp/moc_sppropertydialog.o
DIST          = /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		PipelineVisualizer.pro
QMAKE_TARGET  = PVisualizer
DESTDIR       = ../build/
TARGET        = libPVisualizer.so.1.0.0
TARGETA       = ../build/libPVisualizer.a
TARGETD       = libPVisualizer.so.1.0.0
TARGET0       = libPVisualizer.so
TARGET1       = libPVisualizer.so.1
TARGET2       = libPVisualizer.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../build/$(TARGET)

../build/$(TARGET): ui_variabledoublegeneratorproviderdialog.h $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../build/ || $(MKDIR) ../build/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../build/$(TARGET)
	-$(DEL_FILE) ../build/$(TARGET0)
	-$(DEL_FILE) ../build/$(TARGET1)
	-$(DEL_FILE) ../build/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../build/



staticlib: $(TARGETA)

$(TARGETA): ui_variabledoublegeneratorproviderdialog.h $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: PipelineVisualizer.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile PipelineVisualizer.pro
/usr/lib/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile PipelineVisualizer.pro

dist: 
	@$(CHK_DIR_EXISTS) ../temp/PVisualizer1.0.0 || $(MKDIR) ../temp/PVisualizer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../temp/PVisualizer1.0.0/ && $(COPY_FILE) --parents pvisual.h pipefeed.h pipetarget.h processgraphics.h targetcollection.h pipeprovider.h pipeproviderprovider.h signalprocessor.h soundsink.h soundfeeder.h constSetting.h util.h doublegenerator.h simplelinegraph.h booleangenerator.h counterkeeper.h graphabstraction.h signalpipefeed.h signalpipeprovider.h signalpipetarget.h doublepipetarget.h doublepipeprovider.h doublepipefeed.h booleanpipetarget.h booleanpipeprovider.h booleanpipefeed.h variabledoublegeneratorprovider.h variabledoublegeneratorproviderdialog.h signalscaler.h booleangeneratorprovider.h conditionaloutputsignalpipe.h widgetedprocessgraphics.h widgetedprocessgraphics.h graphabstractionprovider.h graphicproxywidgetgraphhack.h conditionalinputsignalpipe.h periodiclistformatter.h sppropertydialog.h hammingwindowmultiplysp.h signalblockbuilder.h providerplugininterface.h blockgenerator.h constantdoublegeneratorprovider.h multivectorfunctionpipe.h selectivevaluepipe.h hammingwindowdividesp.h blocknormalizer.h fftprocessor.h doubleindexvector.h signalexpander.h fftrectangulartopolarconverter.h fftpolartorectangularconverter.h inversefftprocessor.h selectivesignalelimination.h vectorfunctionpipe.h pinknoiseremover.h functionpipe.h signalpipe.h linearrow.h simpleprocessgraphicsprovidertemplate.h blocklengthsender.h doublemultiply.h harmoniccalculator.h ../temp/PVisualizer1.0.0/ && $(COPY_FILE) --parents pvisual.cpp pipefeed.cpp pipetarget.cpp processgraphics.cpp targetcollection.cpp pipeprovider.cpp pipeproviderprovider.cpp signalprocessor.cpp soundsink.cpp soundfeeder.cpp constSetting.cpp util.cpp doublegenerator.cpp simplelinegraph.cpp booleangenerator.cpp counterkeeper.cpp graphabstraction.cpp signalpipefeed.cpp signalpipeprovider.cpp signalpipetarget.cpp doublepipetarget.cpp doublepipeprovider.cpp doublepipefeed.cpp booleanpipetarget.cpp booleanpipeprovider.cpp booleanpipefeed.cpp variabledoublegeneratorprovider.cpp variabledoublegeneratorproviderdialog.cpp signalscaler.cpp booleangeneratorprovider.cpp conditionaloutputsignalpipe.cpp widgetedprocessgraphics.cpp graphabstractionprovider.cpp graphicproxywidgetgraphhack.cpp conditionalinputsignalpipe.cpp periodiclistformatter.cpp sppropertydialog.cpp hammingwindowmultiplysp.cpp signalblockbuilder.cpp blockgenerator.cpp constantdoublegeneratorprovider.cpp multivectorfunctionpipe.cpp selectivevaluepipe.cpp hammingwindowdividesp.cpp blocknormalizer.cpp fftprocessor.cpp doubleindexvector.cpp signalexpander.cpp fftrectangulartopolarconverter.cpp fftpolartorectangularconverter.cpp inversefftprocessor.cpp selectivesignalelimination.cpp vectorfunctionpipe.cpp pinknoiseremover.cpp functionpipe.cpp signalpipe.cpp linearrow.cpp simpleprocessgraphicsprovidertemplate.cpp blocklengthsender.cpp doublemultiply.cpp harmoniccalculator.cpp ../temp/PVisualizer1.0.0/ && $(COPY_FILE) --parents variabledoublegeneratorproviderdialog.ui ../temp/PVisualizer1.0.0/ && (cd `dirname ../temp/PVisualizer1.0.0` && $(TAR) PVisualizer1.0.0.tar PVisualizer1.0.0 && $(COMPRESS) PVisualizer1.0.0.tar) && $(MOVE) `dirname ../temp/PVisualizer1.0.0`/PVisualizer1.0.0.tar.gz . && $(DEL_FILE) -r ../temp/PVisualizer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../build/$(TARGET) 
	-$(DEL_FILE) ../build/$(TARGET0) ../build/$(TARGET1) ../build/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_processgraphics.cpp moc_soundsink.cpp moc_soundfeeder.cpp moc_doublegenerator.cpp moc_simplelinegraph.cpp moc_booleangenerator.cpp moc_variabledoublegeneratorproviderdialog.cpp moc_widgetedprocessgraphics.cpp moc_widgetedprocessgraphics.cpp moc_sppropertydialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_processgraphics.cpp moc_soundsink.cpp moc_soundfeeder.cpp moc_doublegenerator.cpp moc_simplelinegraph.cpp moc_booleangenerator.cpp moc_variabledoublegeneratorproviderdialog.cpp moc_widgetedprocessgraphics.cpp moc_widgetedprocessgraphics.cpp moc_sppropertydialog.cpp
moc_processgraphics.cpp: processgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) processgraphics.h -o moc_processgraphics.cpp

moc_soundsink.cpp: signalprocessor.h \
		counterkeeper.h \
		constSetting.h \
		pipeproviderprovider.h \
		soundsink.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) soundsink.h -o moc_soundsink.cpp

moc_soundfeeder.cpp: signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		soundfeeder.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) soundfeeder.h -o moc_soundfeeder.cpp

moc_doublegenerator.cpp: signalprocessor.h \
		counterkeeper.h \
		doublegenerator.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) doublegenerator.h -o moc_doublegenerator.cpp

moc_simplelinegraph.cpp: /usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		counterkeeper.h \
		graphabstraction.h \
		signalprocessor.h \
		simplelinegraph.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) simplelinegraph.h -o moc_simplelinegraph.cpp

moc_booleangenerator.cpp: signalprocessor.h \
		counterkeeper.h \
		booleangenerator.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) booleangenerator.h -o moc_booleangenerator.cpp

moc_variabledoublegeneratorproviderdialog.cpp: variabledoublegeneratorproviderdialog.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) variabledoublegeneratorproviderdialog.h -o moc_variabledoublegeneratorproviderdialog.cpp

moc_widgetedprocessgraphics.cpp: processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		widgetedprocessgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) widgetedprocessgraphics.h -o moc_widgetedprocessgraphics.cpp

moc_widgetedprocessgraphics.cpp: processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		widgetedprocessgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) widgetedprocessgraphics.h -o moc_widgetedprocessgraphics.cpp

moc_sppropertydialog.cpp: sppropertydialog.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) sppropertydialog.h -o moc_sppropertydialog.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_variabledoublegeneratorproviderdialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_variabledoublegeneratorproviderdialog.h
ui_variabledoublegeneratorproviderdialog.h: variabledoublegeneratorproviderdialog.ui
	/usr/lib/qt4/bin/uic variabledoublegeneratorproviderdialog.ui -o ui_variabledoublegeneratorproviderdialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

../temp/pvisual.o: pvisual.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pvisual.o pvisual.cpp

../temp/pipefeed.o: pipefeed.cpp pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipefeed.o pipefeed.cpp

../temp/pipetarget.o: pipetarget.cpp pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipetarget.o pipetarget.cpp

../temp/processgraphics.o: processgraphics.cpp processgraphics.h \
		signalpipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		signalpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		doublepipetarget.h \
		doublepipeprovider.h \
		booleanpipetarget.h \
		booleanpipeprovider.h \
		pvisual.h \
		pipeproviderprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/processgraphics.o processgraphics.cpp

../temp/targetcollection.o: targetcollection.cpp targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/targetcollection.o targetcollection.cpp

../temp/pipeprovider.o: pipeprovider.cpp pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		signalpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipeprovider.o pipeprovider.cpp

../temp/pipeproviderprovider.o: pipeproviderprovider.cpp pipeproviderprovider.h \
		processgraphics.h \
		sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipeproviderprovider.o pipeproviderprovider.cpp

../temp/signalprocessor.o: signalprocessor.cpp signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalprocessor.o signalprocessor.cpp

../temp/soundsink.o: soundsink.cpp soundsink.h \
		signalprocessor.h \
		counterkeeper.h \
		constSetting.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/soundsink.o soundsink.cpp

../temp/soundfeeder.o: soundfeeder.cpp soundfeeder.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		util.h \
		constSetting.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/soundfeeder.o soundfeeder.cpp

../temp/constSetting.o: constSetting.cpp constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/constSetting.o constSetting.cpp

../temp/util.o: util.cpp util.h \
		constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/util.o util.cpp

../temp/doublegenerator.o: doublegenerator.cpp doublegenerator.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublegenerator.o doublegenerator.cpp

../temp/simplelinegraph.o: simplelinegraph.cpp simplelinegraph.h \
		/usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		counterkeeper.h \
		graphabstraction.h \
		signalprocessor.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_canvas.h \
		/usr/local/qwt-5.2.1/include/qwt_wheel.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_double_range.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_panner.h \
		/usr/local/qwt-5.2.1/include/qwt_panner.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_magnifier.h \
		/usr/local/qwt-5.2.1/include/qwt_magnifier.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_div.h \
		/usr/local/qwt-5.2.1/include/qwt_valuelist.h \
		/usr/local/qwt-5.2.1/include/qwt_double_interval.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_zoomer.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_picker.h \
		/usr/local/qwt-5.2.1/include/qwt_picker.h \
		/usr/local/qwt-5.2.1/include/qwt_event_pattern.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/simplelinegraph.o simplelinegraph.cpp

../temp/booleangenerator.o: booleangenerator.cpp booleangenerator.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleangenerator.o booleangenerator.cpp

../temp/counterkeeper.o: counterkeeper.cpp counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/counterkeeper.o counterkeeper.cpp

../temp/graphabstraction.o: graphabstraction.cpp graphabstraction.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphabstraction.o graphabstraction.cpp

../temp/signalpipefeed.o: signalpipefeed.cpp signalpipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipefeed.o signalpipefeed.cpp

../temp/signalpipeprovider.o: signalpipeprovider.cpp signalpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		signalpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipeprovider.o signalpipeprovider.cpp

../temp/signalpipetarget.o: signalpipetarget.cpp signalpipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipetarget.o signalpipetarget.cpp

../temp/doublepipetarget.o: doublepipetarget.cpp doublepipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipetarget.o doublepipetarget.cpp

../temp/doublepipeprovider.o: doublepipeprovider.cpp doublepipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h \
		doublepipeprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipeprovider.o doublepipeprovider.cpp

../temp/doublepipefeed.o: doublepipefeed.cpp doublepipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipefeed.o doublepipefeed.cpp

../temp/booleanpipetarget.o: booleanpipetarget.cpp booleanpipetarget.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipetarget.o booleanpipetarget.cpp

../temp/booleanpipeprovider.o: booleanpipeprovider.cpp booleanpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		booleanpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipeprovider.o booleanpipeprovider.cpp

../temp/booleanpipefeed.o: booleanpipefeed.cpp booleanpipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipefeed.o booleanpipefeed.cpp

../temp/variabledoublegeneratorprovider.o: variabledoublegeneratorprovider.cpp variabledoublegeneratorprovider.h \
		pipeproviderprovider.h \
		doublegenerator.h \
		signalprocessor.h \
		counterkeeper.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		variabledoublegeneratorproviderdialog.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h \
		/usr/local/qwt-5.2.1/include/qwt_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_scale.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_double_range.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/variabledoublegeneratorprovider.o variabledoublegeneratorprovider.cpp

../temp/variabledoublegeneratorproviderdialog.o: variabledoublegeneratorproviderdialog.cpp variabledoublegeneratorproviderdialog.h \
		ui_variabledoublegeneratorproviderdialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/variabledoublegeneratorproviderdialog.o variabledoublegeneratorproviderdialog.cpp

../temp/signalscaler.o: signalscaler.cpp signalscaler.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalscaler.o signalscaler.cpp

../temp/booleangeneratorprovider.o: booleangeneratorprovider.cpp booleangeneratorprovider.h \
		booleangenerator.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleangeneratorprovider.o booleangeneratorprovider.cpp

../temp/conditionaloutputsignalpipe.o: conditionaloutputsignalpipe.cpp conditionaloutputsignalpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/conditionaloutputsignalpipe.o conditionaloutputsignalpipe.cpp

../temp/widgetedprocessgraphics.o: widgetedprocessgraphics.cpp widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		signalpipeprovider.h \
		signalpipetarget.h \
		doublepipeprovider.h \
		doublepipetarget.h \
		booleanpipetarget.h \
		booleanpipeprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/widgetedprocessgraphics.o widgetedprocessgraphics.cpp

../temp/graphabstractionprovider.o: graphabstractionprovider.cpp graphabstractionprovider.h \
		graphabstraction.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		simplelinegraph.h \
		/usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphabstractionprovider.o graphabstractionprovider.cpp

../temp/graphicproxywidgetgraphhack.o: graphicproxywidgetgraphhack.cpp graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphicproxywidgetgraphhack.o graphicproxywidgetgraphhack.cpp

../temp/conditionalinputsignalpipe.o: conditionalinputsignalpipe.cpp conditionalinputsignalpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/conditionalinputsignalpipe.o conditionalinputsignalpipe.cpp

../temp/periodiclistformatter.o: periodiclistformatter.cpp periodiclistformatter.h \
		signalprocessor.h \
		counterkeeper.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		pipeproviderprovider.h \
		sppropertydialog.h \
		processgraphics.h \
		widgetedprocessgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/periodiclistformatter.o periodiclistformatter.cpp

../temp/sppropertydialog.o: sppropertydialog.cpp sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/sppropertydialog.o sppropertydialog.cpp

../temp/hammingwindowmultiplysp.o: hammingwindowmultiplysp.cpp hammingwindowmultiplysp.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		processgraphics.h \
		widgetedprocessgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/hammingwindowmultiplysp.o hammingwindowmultiplysp.cpp

../temp/signalblockbuilder.o: signalblockbuilder.cpp signalblockbuilder.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h \
		sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalblockbuilder.o signalblockbuilder.cpp

../temp/blockgenerator.o: blockgenerator.cpp blockgenerator.h \
		signalprocessor.h \
		counterkeeper.h \
		doublegenerator.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blockgenerator.o blockgenerator.cpp

../temp/constantdoublegeneratorprovider.o: constantdoublegeneratorprovider.cpp constantdoublegeneratorprovider.h \
		pipeproviderprovider.h \
		signalprocessor.h \
		counterkeeper.h \
		doublegenerator.h \
		processgraphics.h \
		widgetedprocessgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/constantdoublegeneratorprovider.o constantdoublegeneratorprovider.cpp

../temp/multivectorfunctionpipe.o: multivectorfunctionpipe.cpp multivectorfunctionpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/multivectorfunctionpipe.o multivectorfunctionpipe.cpp

../temp/selectivevaluepipe.o: selectivevaluepipe.cpp selectivevaluepipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/selectivevaluepipe.o selectivevaluepipe.cpp

../temp/hammingwindowdividesp.o: hammingwindowdividesp.cpp hammingwindowdividesp.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		pvisual.h \
		targetcollection.h \
		pipetarget.h \
		processgraphics.h \
		widgetedprocessgraphics.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/hammingwindowdividesp.o hammingwindowdividesp.cpp

../temp/blocknormalizer.o: blocknormalizer.cpp blocknormalizer.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blocknormalizer.o blocknormalizer.cpp

../temp/fftprocessor.o: fftprocessor.cpp fftprocessor.h \
		signalprocessor.h \
		counterkeeper.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		../fftw-3.2.2/api/fftw3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftprocessor.o fftprocessor.cpp

../temp/doubleindexvector.o: doubleindexvector.cpp doubleindexvector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doubleindexvector.o doubleindexvector.cpp

../temp/signalexpander.o: signalexpander.cpp signalexpander.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h \
		doubleindexvector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalexpander.o signalexpander.cpp

../temp/fftrectangulartopolarconverter.o: fftrectangulartopolarconverter.cpp fftrectangulartopolarconverter.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftrectangulartopolarconverter.o fftrectangulartopolarconverter.cpp

../temp/fftpolartorectangularconverter.o: fftpolartorectangularconverter.cpp fftpolartorectangularconverter.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftpolartorectangularconverter.o fftpolartorectangularconverter.cpp

../temp/inversefftprocessor.o: inversefftprocessor.cpp inversefftprocessor.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h \
		../fftw-3.2.2/api/fftw3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/inversefftprocessor.o inversefftprocessor.cpp

../temp/selectivesignalelimination.o: selectivesignalelimination.cpp selectivesignalelimination.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/selectivesignalelimination.o selectivesignalelimination.cpp

../temp/vectorfunctionpipe.o: vectorfunctionpipe.cpp vectorfunctionpipe.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/vectorfunctionpipe.o vectorfunctionpipe.cpp

../temp/pinknoiseremover.o: pinknoiseremover.cpp pinknoiseremover.h \
		signalprocessor.h \
		counterkeeper.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pinknoiseremover.o pinknoiseremover.cpp

../temp/functionpipe.o: functionpipe.cpp functionpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/functionpipe.o functionpipe.cpp

../temp/signalpipe.o: signalpipe.cpp signalpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipe.o signalpipe.cpp

../temp/linearrow.o: linearrow.cpp linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/linearrow.o linearrow.cpp

../temp/simpleprocessgraphicsprovidertemplate.o: simpleprocessgraphicsprovidertemplate.cpp simpleprocessgraphicsprovidertemplate.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/simpleprocessgraphicsprovidertemplate.o simpleprocessgraphicsprovidertemplate.cpp

../temp/blocklengthsender.o: blocklengthsender.cpp blocklengthsender.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blocklengthsender.o blocklengthsender.cpp

../temp/doublemultiply.o: doublemultiply.cpp doublemultiply.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublemultiply.o doublemultiply.cpp

../temp/harmoniccalculator.o: harmoniccalculator.cpp harmoniccalculator.h \
		signalpipe.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h \
		doubleindexvector.h \
		constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/harmoniccalculator.o harmoniccalculator.cpp

../temp/moc_processgraphics.o: moc_processgraphics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_processgraphics.o moc_processgraphics.cpp

../temp/moc_soundsink.o: moc_soundsink.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_soundsink.o moc_soundsink.cpp

../temp/moc_soundfeeder.o: moc_soundfeeder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_soundfeeder.o moc_soundfeeder.cpp

../temp/moc_doublegenerator.o: moc_doublegenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_doublegenerator.o moc_doublegenerator.cpp

../temp/moc_simplelinegraph.o: moc_simplelinegraph.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_simplelinegraph.o moc_simplelinegraph.cpp

../temp/moc_booleangenerator.o: moc_booleangenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_booleangenerator.o moc_booleangenerator.cpp

../temp/moc_variabledoublegeneratorproviderdialog.o: moc_variabledoublegeneratorproviderdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_variabledoublegeneratorproviderdialog.o moc_variabledoublegeneratorproviderdialog.cpp

../temp/moc_widgetedprocessgraphics.o: moc_widgetedprocessgraphics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_widgetedprocessgraphics.o moc_widgetedprocessgraphics.cpp

../temp/moc_sppropertydialog.o: moc_sppropertydialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_sppropertydialog.o moc_sppropertydialog.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

