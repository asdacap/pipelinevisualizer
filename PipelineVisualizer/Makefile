#############################################################################
# Makefile for building: libPVisualizer.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.1) on: Wed Mar 2 15:02:29 2011
# Project:  PipelineVisualizer.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/lib/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile PipelineVisualizer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_MULTIMEDIA_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtMultimedia -I/usr/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared -Wl,-soname,libPVisualizer.so.1
LIBS          = $(SUBLIBS)   -lQtMultimedia -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../temp/

####### Files

SOURCES       = pvisual.cpp \
		pipefeed.cpp \
		pipetarget.cpp \
		processgraphics.cpp \
		targetcollection.cpp \
		pipeprovider.cpp \
		pipeproviderprovider.cpp \
		signalprocessor.cpp \
		constSetting.cpp \
		util.cpp \
		counterkeeper.cpp \
		signalpipefeed.cpp \
		signalpipeprovider.cpp \
		signalpipetarget.cpp \
		doublepipetarget.cpp \
		doublepipeprovider.cpp \
		doublepipefeed.cpp \
		booleanpipetarget.cpp \
		booleanpipeprovider.cpp \
		booleanpipefeed.cpp \
		widgetedprocessgraphics.cpp \
		graphicproxywidgetgraphhack.cpp \
		sppropertydialog.cpp \
		doubleindexvector.cpp \
		linearrow.cpp \
		simpleprocessgraphicsprovidertemplate.cpp moc_processgraphics.cpp \
		moc_widgetedprocessgraphics.cpp \
		moc_sppropertydialog.cpp
OBJECTS       = ../temp/pvisual.o \
		../temp/pipefeed.o \
		../temp/pipetarget.o \
		../temp/processgraphics.o \
		../temp/targetcollection.o \
		../temp/pipeprovider.o \
		../temp/pipeproviderprovider.o \
		../temp/signalprocessor.o \
		../temp/constSetting.o \
		../temp/util.o \
		../temp/counterkeeper.o \
		../temp/signalpipefeed.o \
		../temp/signalpipeprovider.o \
		../temp/signalpipetarget.o \
		../temp/doublepipetarget.o \
		../temp/doublepipeprovider.o \
		../temp/doublepipefeed.o \
		../temp/booleanpipetarget.o \
		../temp/booleanpipeprovider.o \
		../temp/booleanpipefeed.o \
		../temp/widgetedprocessgraphics.o \
		../temp/graphicproxywidgetgraphhack.o \
		../temp/sppropertydialog.o \
		../temp/doubleindexvector.o \
		../temp/linearrow.o \
		../temp/simpleprocessgraphicsprovidertemplate.o \
		../temp/moc_processgraphics.o \
		../temp/moc_widgetedprocessgraphics.o \
		../temp/moc_sppropertydialog.o
DIST          = /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		PipelineVisualizer.pro
QMAKE_TARGET  = PVisualizer
DESTDIR       = ../build/
TARGET        = libPVisualizer.so.1.0.0
TARGETA       = ../build/libPVisualizer.a
TARGETD       = libPVisualizer.so.1.0.0
TARGET0       = libPVisualizer.so
TARGET1       = libPVisualizer.so.1
TARGET2       = libPVisualizer.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../build/$(TARGET)

../build/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../build/ || $(MKDIR) ../build/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../build/$(TARGET)
	-$(DEL_FILE) ../build/$(TARGET0)
	-$(DEL_FILE) ../build/$(TARGET1)
	-$(DEL_FILE) ../build/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../build/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: PipelineVisualizer.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile PipelineVisualizer.pro
/usr/lib/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile PipelineVisualizer.pro

dist: 
	@$(CHK_DIR_EXISTS) ../temp/PVisualizer1.0.0 || $(MKDIR) ../temp/PVisualizer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../temp/PVisualizer1.0.0/ && $(COPY_FILE) --parents pvisual.h pipefeed.h pipetarget.h processgraphics.h targetcollection.h pipeprovider.h pipeproviderprovider.h signalprocessor.h constSetting.h util.h counterkeeper.h signalpipefeed.h signalpipeprovider.h signalpipetarget.h doublepipetarget.h doublepipeprovider.h doublepipefeed.h booleanpipetarget.h booleanpipeprovider.h booleanpipefeed.h widgetedprocessgraphics.h widgetedprocessgraphics.h graphicproxywidgetgraphhack.h sppropertydialog.h providerplugininterface.h blockgenerator.h doubleindexvector.h linearrow.h simpleprocessgraphicsprovidertemplate.h ../temp/PVisualizer1.0.0/ && $(COPY_FILE) --parents pvisual.cpp pipefeed.cpp pipetarget.cpp processgraphics.cpp targetcollection.cpp pipeprovider.cpp pipeproviderprovider.cpp signalprocessor.cpp constSetting.cpp util.cpp counterkeeper.cpp signalpipefeed.cpp signalpipeprovider.cpp signalpipetarget.cpp doublepipetarget.cpp doublepipeprovider.cpp doublepipefeed.cpp booleanpipetarget.cpp booleanpipeprovider.cpp booleanpipefeed.cpp widgetedprocessgraphics.cpp graphicproxywidgetgraphhack.cpp sppropertydialog.cpp doubleindexvector.cpp linearrow.cpp simpleprocessgraphicsprovidertemplate.cpp ../temp/PVisualizer1.0.0/ && (cd `dirname ../temp/PVisualizer1.0.0` && $(TAR) PVisualizer1.0.0.tar PVisualizer1.0.0 && $(COMPRESS) PVisualizer1.0.0.tar) && $(MOVE) `dirname ../temp/PVisualizer1.0.0`/PVisualizer1.0.0.tar.gz . && $(DEL_FILE) -r ../temp/PVisualizer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../build/$(TARGET) 
	-$(DEL_FILE) ../build/$(TARGET0) ../build/$(TARGET1) ../build/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_processgraphics.cpp moc_widgetedprocessgraphics.cpp moc_widgetedprocessgraphics.cpp moc_sppropertydialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_processgraphics.cpp moc_widgetedprocessgraphics.cpp moc_widgetedprocessgraphics.cpp moc_sppropertydialog.cpp
moc_processgraphics.cpp: processgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) processgraphics.h -o moc_processgraphics.cpp

moc_widgetedprocessgraphics.cpp: processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		widgetedprocessgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) widgetedprocessgraphics.h -o moc_widgetedprocessgraphics.cpp

moc_widgetedprocessgraphics.cpp: processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		widgetedprocessgraphics.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) widgetedprocessgraphics.h -o moc_widgetedprocessgraphics.cpp

moc_sppropertydialog.cpp: sppropertydialog.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) sppropertydialog.h -o moc_sppropertydialog.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

../temp/pvisual.o: pvisual.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pvisual.o pvisual.cpp

../temp/pipefeed.o: pipefeed.cpp pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipefeed.o pipefeed.cpp

../temp/pipetarget.o: pipetarget.cpp pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipetarget.o pipetarget.cpp

../temp/processgraphics.o: processgraphics.cpp processgraphics.h \
		signalpipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		signalpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		doublepipetarget.h \
		doublepipeprovider.h \
		booleanpipetarget.h \
		booleanpipeprovider.h \
		pvisual.h \
		pipeproviderprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/processgraphics.o processgraphics.cpp

../temp/targetcollection.o: targetcollection.cpp targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/targetcollection.o targetcollection.cpp

../temp/pipeprovider.o: pipeprovider.cpp pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		signalpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipeprovider.o pipeprovider.cpp

../temp/pipeproviderprovider.o: pipeproviderprovider.cpp pipeproviderprovider.h \
		processgraphics.h \
		sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipeproviderprovider.o pipeproviderprovider.cpp

../temp/signalprocessor.o: signalprocessor.cpp signalprocessor.h \
		counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalprocessor.o signalprocessor.cpp

../temp/constSetting.o: constSetting.cpp constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/constSetting.o constSetting.cpp

../temp/util.o: util.cpp util.h \
		constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/util.o util.cpp

../temp/counterkeeper.o: counterkeeper.cpp counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/counterkeeper.o counterkeeper.cpp

../temp/signalpipefeed.o: signalpipefeed.cpp signalpipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipefeed.o signalpipefeed.cpp

../temp/signalpipeprovider.o: signalpipeprovider.cpp signalpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		signalpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipeprovider.o signalpipeprovider.cpp

../temp/signalpipetarget.o: signalpipetarget.cpp signalpipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalpipetarget.o signalpipetarget.cpp

../temp/doublepipetarget.o: doublepipetarget.cpp doublepipetarget.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		targetcollection.h \
		pipefeed.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipetarget.o doublepipetarget.cpp

../temp/doublepipeprovider.o: doublepipeprovider.cpp doublepipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h \
		doublepipeprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipeprovider.o doublepipeprovider.cpp

../temp/doublepipefeed.o: doublepipefeed.cpp doublepipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublepipefeed.o doublepipefeed.cpp

../temp/booleanpipetarget.o: booleanpipetarget.cpp booleanpipetarget.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h \
		processgraphics.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipetarget.o booleanpipetarget.cpp

../temp/booleanpipeprovider.o: booleanpipeprovider.cpp booleanpipeprovider.h \
		pipeprovider.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		linearrow.h \
		booleanpipefeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipeprovider.o booleanpipeprovider.cpp

../temp/booleanpipefeed.o: booleanpipefeed.cpp booleanpipefeed.h \
		pipefeed.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleanpipefeed.o booleanpipefeed.cpp

../temp/widgetedprocessgraphics.o: widgetedprocessgraphics.cpp widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		pipeproviderprovider.h \
		graphicproxywidgetgraphhack.h \
		signalpipeprovider.h \
		signalpipetarget.h \
		doublepipeprovider.h \
		doublepipetarget.h \
		booleanpipetarget.h \
		booleanpipeprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/widgetedprocessgraphics.o widgetedprocessgraphics.cpp

../temp/graphicproxywidgetgraphhack.o: graphicproxywidgetgraphhack.cpp graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphicproxywidgetgraphhack.o graphicproxywidgetgraphhack.cpp

../temp/sppropertydialog.o: sppropertydialog.cpp sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/sppropertydialog.o sppropertydialog.cpp

../temp/doubleindexvector.o: doubleindexvector.cpp doubleindexvector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doubleindexvector.o doubleindexvector.cpp

../temp/linearrow.o: linearrow.cpp linearrow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/linearrow.o linearrow.cpp

../temp/simpleprocessgraphicsprovidertemplate.o: simpleprocessgraphicsprovidertemplate.cpp simpleprocessgraphicsprovidertemplate.h \
		pipeproviderprovider.h \
		widgetedprocessgraphics.h \
		processgraphics.h \
		targetcollection.h \
		pipetarget.h \
		signalprocessor.h \
		counterkeeper.h \
		pipeprovider.h \
		pipefeed.h \
		linearrow.h \
		pvisual.h \
		graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/simpleprocessgraphicsprovidertemplate.o simpleprocessgraphicsprovidertemplate.cpp

../temp/moc_processgraphics.o: moc_processgraphics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_processgraphics.o moc_processgraphics.cpp

../temp/moc_widgetedprocessgraphics.o: moc_widgetedprocessgraphics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_widgetedprocessgraphics.o moc_widgetedprocessgraphics.cpp

../temp/moc_sppropertydialog.o: moc_sppropertydialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_sppropertydialog.o moc_sppropertydialog.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

