#############################################################################
# Makefile for building: libDefaultSignalProcessor.so
# Generated by qmake (2.01a) (Qt 4.7.1) on: Fri Mar 18 22:45:17 2011
# Project:  DefaultSignalProcessor.pro
# Template: lib
# Command: /usr/bin/qmake -nocache -o Makefile DefaultSignalProcessor.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_PLUGIN -DQT_MULTIMEDIA_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtMultimedia -I/usr/include -I../PipelineVisualizer -I/usr/local/qwt-5.2.1/include -I../../fftw-3.2.2/api -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L/home/amirul/PipelineVisualizerProject/PipelineVisualizer/DefaultSignalProcessor/../build/ -lPVisualizer -L../../qwt-5.2.1/lib/ -lqwt -L/home/amirul/PipelineVisualizerProject/PipelineVisualizer/DefaultSignalProcessor/../../fftw-3.2.2/.libs/ -lfftw3 -lQtMultimedia -L/usr/lib -L/usr/X11R6/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../temp/

####### Files

SOURCES       = defaultsignalprocessor.cpp \
		doublemultiply.cpp \
		vectorfunctionpipe.cpp \
		variabledoublegeneratorprovider.cpp \
		soundsink.cpp \
		soundfeeder.cpp \
		simplelinegraph.cpp \
		signalscaler.cpp \
		signalexpander.cpp \
		signalblockbuilder.cpp \
		selectivevaluepipe.cpp \
		selectivesignalelimination.cpp \
		pinknoiseremover.cpp \
		periodiclistformatter.cpp \
		inversefftprocessor.cpp \
		harmoniccalculator.cpp \
		hammingwindowmultiplysp.cpp \
		hammingwindowdividesp.cpp \
		graphabstractionprovider.cpp \
		graphabstraction.cpp \
		functionpipe.cpp \
		fftrectangulartopolarconverter.cpp \
		fftprocessor.cpp \
		fftpolartorectangularconverter.cpp \
		doublegenerator.cpp \
		constantdoublegeneratorprovider.cpp \
		conditionaloutputsignalpipe.cpp \
		conditionalinputsignalpipe.cpp \
		booleangeneratorprovider.cpp \
		booleangenerator.cpp \
		blocknormalizer.cpp \
		blocklengthsender.cpp \
		blockgenerator.cpp \
		multivectorfunctionpipe.cpp \
		signalrepeater.cpp moc_defaultsignalprocessor.cpp \
		moc_soundsink.cpp \
		moc_soundfeeder.cpp \
		moc_simplelinegraph.cpp \
		moc_doublegenerator.cpp \
		moc_booleangenerator.cpp
OBJECTS       = ../temp/defaultsignalprocessor.o \
		../temp/doublemultiply.o \
		../temp/vectorfunctionpipe.o \
		../temp/variabledoublegeneratorprovider.o \
		../temp/soundsink.o \
		../temp/soundfeeder.o \
		../temp/simplelinegraph.o \
		../temp/signalscaler.o \
		../temp/signalexpander.o \
		../temp/signalblockbuilder.o \
		../temp/selectivevaluepipe.o \
		../temp/selectivesignalelimination.o \
		../temp/pinknoiseremover.o \
		../temp/periodiclistformatter.o \
		../temp/inversefftprocessor.o \
		../temp/harmoniccalculator.o \
		../temp/hammingwindowmultiplysp.o \
		../temp/hammingwindowdividesp.o \
		../temp/graphabstractionprovider.o \
		../temp/graphabstraction.o \
		../temp/functionpipe.o \
		../temp/fftrectangulartopolarconverter.o \
		../temp/fftprocessor.o \
		../temp/fftpolartorectangularconverter.o \
		../temp/doublegenerator.o \
		../temp/constantdoublegeneratorprovider.o \
		../temp/conditionaloutputsignalpipe.o \
		../temp/conditionalinputsignalpipe.o \
		../temp/booleangeneratorprovider.o \
		../temp/booleangenerator.o \
		../temp/blocknormalizer.o \
		../temp/blocklengthsender.o \
		../temp/blockgenerator.o \
		../temp/multivectorfunctionpipe.o \
		../temp/signalrepeater.o \
		../temp/moc_defaultsignalprocessor.o \
		../temp/moc_soundsink.o \
		../temp/moc_soundfeeder.o \
		../temp/moc_simplelinegraph.o \
		../temp/moc_doublegenerator.o \
		../temp/moc_booleangenerator.o
DIST          = ../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/g++.conf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/unix.conf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_functions.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_config.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/exclusive_builds.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_pre.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/release.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_post.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/warn_on.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/unix/thread.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/moc.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/resources.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/uic.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/yacc.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/lex.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/include_source_dir.prf \
		DefaultSignalProcessor.pro
QMAKE_TARGET  = DefaultSignalProcessor
DESTDIR       = ../build/
TARGET        = libDefaultSignalProcessor.so
TARGETD       = libDefaultSignalProcessor.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../build/$(TARGET)

../build/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../build/ || $(MKDIR) ../build/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../build/



Makefile: DefaultSignalProcessor.pro ../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/linux-g++/qmake.conf ../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/g++.conf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/unix.conf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_functions.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_config.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/exclusive_builds.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_pre.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/release.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_post.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/warn_on.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/unix/thread.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/moc.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/resources.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/uic.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/yacc.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/lex.prf \
		../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtMultimedia.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -nocache -o Makefile DefaultSignalProcessor.pro
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/g++.conf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/unix.conf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_functions.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt_config.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/exclusive_builds.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_pre.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/release.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/default_post.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/warn_on.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/qt.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/unix/thread.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/moc.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/resources.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/uic.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/yacc.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/lex.prf:
../../../QtSDK/Desktop/Qt/472/gcc/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtMultimedia.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -nocache -o Makefile DefaultSignalProcessor.pro

dist: 
	@$(CHK_DIR_EXISTS) ../temp/DefaultSignalProcessor1.0.0 || $(MKDIR) ../temp/DefaultSignalProcessor1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../temp/DefaultSignalProcessor1.0.0/ && $(COPY_FILE) --parents defaultsignalprocessor.h doublemultiply.h vectorfunctionpipe.h variabledoublegeneratorprovider.h soundsink.h soundfeeder.h simplelinegraph.h signalscaler.h signalexpander.h signalblockbuilder.h selectivevaluepipe.h selectivesignalelimination.h pinknoiseremover.h periodiclistformatter.h inversefftprocessor.h harmoniccalculator.h hammingwindowmultiplysp.h hammingwindowdividesp.h graphabstractionprovider.h graphabstraction.h functionpipe.h fftrectangulartopolarconverter.h fftprocessor.h fftpolartorectangularconverter.h doublegenerator.h constantdoublegeneratorprovider.h conditionaloutputsignalpipe.h conditionalinputsignalpipe.h booleangeneratorprovider.h booleangenerator.h blocknormalizer.h blocklengthsender.h blockgenerator.h multivectorfunctionpipe.h signalrepeater.h ../temp/DefaultSignalProcessor1.0.0/ && $(COPY_FILE) --parents defaultsignalprocessor.cpp doublemultiply.cpp vectorfunctionpipe.cpp variabledoublegeneratorprovider.cpp soundsink.cpp soundfeeder.cpp simplelinegraph.cpp signalscaler.cpp signalexpander.cpp signalblockbuilder.cpp selectivevaluepipe.cpp selectivesignalelimination.cpp pinknoiseremover.cpp periodiclistformatter.cpp inversefftprocessor.cpp harmoniccalculator.cpp hammingwindowmultiplysp.cpp hammingwindowdividesp.cpp graphabstractionprovider.cpp graphabstraction.cpp functionpipe.cpp fftrectangulartopolarconverter.cpp fftprocessor.cpp fftpolartorectangularconverter.cpp doublegenerator.cpp constantdoublegeneratorprovider.cpp conditionaloutputsignalpipe.cpp conditionalinputsignalpipe.cpp booleangeneratorprovider.cpp booleangenerator.cpp blocknormalizer.cpp blocklengthsender.cpp blockgenerator.cpp multivectorfunctionpipe.cpp signalrepeater.cpp ../temp/DefaultSignalProcessor1.0.0/ && (cd `dirname ../temp/DefaultSignalProcessor1.0.0` && $(TAR) DefaultSignalProcessor1.0.0.tar DefaultSignalProcessor1.0.0 && $(COMPRESS) DefaultSignalProcessor1.0.0.tar) && $(MOVE) `dirname ../temp/DefaultSignalProcessor1.0.0`/DefaultSignalProcessor1.0.0.tar.gz . && $(DEL_FILE) -r ../temp/DefaultSignalProcessor1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_defaultsignalprocessor.cpp moc_soundsink.cpp moc_soundfeeder.cpp moc_simplelinegraph.cpp moc_doublegenerator.cpp moc_booleangenerator.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_defaultsignalprocessor.cpp moc_soundsink.cpp moc_soundfeeder.cpp moc_simplelinegraph.cpp moc_doublegenerator.cpp moc_booleangenerator.cpp
moc_defaultsignalprocessor.cpp: ../PipelineVisualizer/providerplugininterface.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		defaultsignalprocessor.h
	/usr/bin/moc $(DEFINES) $(INCPATH) defaultsignalprocessor.h -o moc_defaultsignalprocessor.cpp

moc_soundsink.cpp: ../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/constSetting.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		soundsink.h
	/usr/bin/moc $(DEFINES) $(INCPATH) soundsink.h -o moc_soundsink.cpp

moc_soundfeeder.cpp: ../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		soundfeeder.h
	/usr/bin/moc $(DEFINES) $(INCPATH) soundfeeder.h -o moc_soundfeeder.cpp

moc_simplelinegraph.cpp: /usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		../PipelineVisualizer/counterkeeper.h \
		graphabstraction.h \
		../PipelineVisualizer/signalprocessor.h \
		simplelinegraph.h
	/usr/bin/moc $(DEFINES) $(INCPATH) simplelinegraph.h -o moc_simplelinegraph.cpp

moc_doublegenerator.cpp: ../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		doublegenerator.h
	/usr/bin/moc $(DEFINES) $(INCPATH) doublegenerator.h -o moc_doublegenerator.cpp

moc_booleangenerator.cpp: ../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		booleangenerator.h
	/usr/bin/moc $(DEFINES) $(INCPATH) booleangenerator.h -o moc_booleangenerator.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

../temp/defaultsignalprocessor.o: defaultsignalprocessor.cpp defaultsignalprocessor.h \
		../PipelineVisualizer/providerplugininterface.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/simpleprocessgraphicsprovidertemplate.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		doublemultiply.h \
		variabledoublegeneratorprovider.h \
		doublegenerator.h \
		signalscaler.h \
		booleangeneratorprovider.h \
		booleangenerator.h \
		conditionaloutputsignalpipe.h \
		graphabstractionprovider.h \
		graphabstraction.h \
		simplelinegraph.h \
		/usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		conditionalinputsignalpipe.h \
		periodiclistformatter.h \
		hammingwindowmultiplysp.h \
		signalblockbuilder.h \
		constantdoublegeneratorprovider.h \
		blockgenerator.h \
		multivectorfunctionpipe.h \
		../PipelineVisualizer/util.h \
		../PipelineVisualizer/constSetting.h \
		selectivevaluepipe.h \
		hammingwindowdividesp.h \
		blocknormalizer.h \
		fftprocessor.h \
		signalexpander.h \
		fftrectangulartopolarconverter.h \
		fftpolartorectangularconverter.h \
		inversefftprocessor.h \
		selectivesignalelimination.h \
		pinknoiseremover.h \
		functionpipe.h \
		../PipelineVisualizer/signalpipe.h \
		blocklengthsender.h \
		harmoniccalculator.h \
		../PipelineVisualizer/doubleindexvector.h \
		soundsink.h \
		soundfeeder.h \
		signalrepeater.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/defaultsignalprocessor.o defaultsignalprocessor.cpp

../temp/doublemultiply.o: doublemultiply.cpp doublemultiply.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublemultiply.o doublemultiply.cpp

../temp/vectorfunctionpipe.o: vectorfunctionpipe.cpp vectorfunctionpipe.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/vectorfunctionpipe.o vectorfunctionpipe.cpp

../temp/variabledoublegeneratorprovider.o: variabledoublegeneratorprovider.cpp variabledoublegeneratorprovider.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		doublegenerator.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		/usr/local/qwt-5.2.1/include/qwt_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_scale.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_double_range.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/variabledoublegeneratorprovider.o variabledoublegeneratorprovider.cpp

../temp/soundsink.o: soundsink.cpp soundsink.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/constSetting.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/soundsink.o soundsink.cpp

../temp/soundfeeder.o: soundfeeder.cpp soundfeeder.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/util.h \
		../PipelineVisualizer/constSetting.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/soundfeeder.o soundfeeder.cpp

../temp/simplelinegraph.o: simplelinegraph.cpp simplelinegraph.h \
		/usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		../PipelineVisualizer/counterkeeper.h \
		graphabstraction.h \
		../PipelineVisualizer/signalprocessor.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_canvas.h \
		/usr/local/qwt-5.2.1/include/qwt_wheel.h \
		/usr/local/qwt-5.2.1/include/qwt_abstract_slider.h \
		/usr/local/qwt-5.2.1/include/qwt_double_range.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_panner.h \
		/usr/local/qwt-5.2.1/include/qwt_panner.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_magnifier.h \
		/usr/local/qwt-5.2.1/include/qwt_magnifier.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_div.h \
		/usr/local/qwt-5.2.1/include/qwt_valuelist.h \
		/usr/local/qwt-5.2.1/include/qwt_double_interval.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_zoomer.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_picker.h \
		/usr/local/qwt-5.2.1/include/qwt_picker.h \
		/usr/local/qwt-5.2.1/include/qwt_event_pattern.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/simplelinegraph.o simplelinegraph.cpp

../temp/signalscaler.o: signalscaler.cpp signalscaler.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalscaler.o signalscaler.cpp

../temp/signalexpander.o: signalexpander.cpp signalexpander.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		../PipelineVisualizer/doubleindexvector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalexpander.o signalexpander.cpp

../temp/signalblockbuilder.o: signalblockbuilder.cpp signalblockbuilder.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		../PipelineVisualizer/sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalblockbuilder.o signalblockbuilder.cpp

../temp/selectivevaluepipe.o: selectivevaluepipe.cpp selectivevaluepipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/selectivevaluepipe.o selectivevaluepipe.cpp

../temp/selectivesignalelimination.o: selectivesignalelimination.cpp selectivesignalelimination.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/selectivesignalelimination.o selectivesignalelimination.cpp

../temp/pinknoiseremover.o: pinknoiseremover.cpp pinknoiseremover.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pinknoiseremover.o pinknoiseremover.cpp

../temp/periodiclistformatter.o: periodiclistformatter.cpp periodiclistformatter.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/sppropertydialog.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/periodiclistformatter.o periodiclistformatter.cpp

../temp/inversefftprocessor.o: inversefftprocessor.cpp inversefftprocessor.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		../../fftw-3.2.2/api/fftw3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/inversefftprocessor.o inversefftprocessor.cpp

../temp/harmoniccalculator.o: harmoniccalculator.cpp harmoniccalculator.h \
		../PipelineVisualizer/signalpipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		../PipelineVisualizer/doubleindexvector.h \
		../PipelineVisualizer/constSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/harmoniccalculator.o harmoniccalculator.cpp

../temp/hammingwindowmultiplysp.o: hammingwindowmultiplysp.cpp hammingwindowmultiplysp.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/hammingwindowmultiplysp.o hammingwindowmultiplysp.cpp

../temp/hammingwindowdividesp.o: hammingwindowdividesp.cpp hammingwindowdividesp.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/hammingwindowdividesp.o hammingwindowdividesp.cpp

../temp/graphabstractionprovider.o: graphabstractionprovider.cpp graphabstractionprovider.h \
		graphabstraction.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		simplelinegraph.h \
		/usr/local/qwt-5.2.1/include/qwt_plot.h \
		/usr/local/qwt-5.2.1/include/qwt_global.h \
		/usr/local/qwt-5.2.1/include/qwt_array.h \
		/usr/local/qwt-5.2.1/include/qwt_text.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_dict.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_item.h \
		/usr/local/qwt-5.2.1/include/qwt_legend_itemmanager.h \
		/usr/local/qwt-5.2.1/include/qwt_double_rect.h \
		/usr/local/qwt-5.2.1/include/qwt_scale_map.h \
		/usr/local/qwt-5.2.1/include/qwt_math.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_printfilter.h \
		/usr/local/qwt-5.2.1/include/qwt_plot_curve.h \
		/usr/local/qwt-5.2.1/include/qwt_polygon.h \
		/usr/local/qwt-5.2.1/include/qwt_data.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphabstractionprovider.o graphabstractionprovider.cpp

../temp/graphabstraction.o: graphabstraction.cpp graphabstraction.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/graphabstraction.o graphabstraction.cpp

../temp/functionpipe.o: functionpipe.cpp functionpipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/functionpipe.o functionpipe.cpp

../temp/fftrectangulartopolarconverter.o: fftrectangulartopolarconverter.cpp fftrectangulartopolarconverter.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftrectangulartopolarconverter.o fftrectangulartopolarconverter.cpp

../temp/fftprocessor.o: fftprocessor.cpp fftprocessor.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		../../fftw-3.2.2/api/fftw3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftprocessor.o fftprocessor.cpp

../temp/fftpolartorectangularconverter.o: fftpolartorectangularconverter.cpp fftpolartorectangularconverter.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/fftpolartorectangularconverter.o fftpolartorectangularconverter.cpp

../temp/doublegenerator.o: doublegenerator.cpp doublegenerator.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublegenerator.o doublegenerator.cpp

../temp/constantdoublegeneratorprovider.o: constantdoublegeneratorprovider.cpp constantdoublegeneratorprovider.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		doublegenerator.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/constantdoublegeneratorprovider.o constantdoublegeneratorprovider.cpp

../temp/conditionaloutputsignalpipe.o: conditionaloutputsignalpipe.cpp conditionaloutputsignalpipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/conditionaloutputsignalpipe.o conditionaloutputsignalpipe.cpp

../temp/conditionalinputsignalpipe.o: conditionalinputsignalpipe.cpp conditionalinputsignalpipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/conditionalinputsignalpipe.o conditionalinputsignalpipe.cpp

../temp/booleangeneratorprovider.o: booleangeneratorprovider.cpp booleangeneratorprovider.h \
		booleangenerator.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleangeneratorprovider.o booleangeneratorprovider.cpp

../temp/booleangenerator.o: booleangenerator.cpp booleangenerator.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/booleangenerator.o booleangenerator.cpp

../temp/blocknormalizer.o: blocknormalizer.cpp blocknormalizer.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blocknormalizer.o blocknormalizer.cpp

../temp/blocklengthsender.o: blocklengthsender.cpp blocklengthsender.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blocklengthsender.o blocklengthsender.cpp

../temp/blockgenerator.o: blockgenerator.cpp blockgenerator.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		doublegenerator.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/blockgenerator.o blockgenerator.cpp

../temp/multivectorfunctionpipe.o: multivectorfunctionpipe.cpp multivectorfunctionpipe.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/multivectorfunctionpipe.o multivectorfunctionpipe.cpp

../temp/signalrepeater.o: signalrepeater.cpp signalrepeater.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalrepeater.o signalrepeater.cpp

../temp/moc_defaultsignalprocessor.o: moc_defaultsignalprocessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_defaultsignalprocessor.o moc_defaultsignalprocessor.cpp

../temp/moc_soundsink.o: moc_soundsink.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_soundsink.o moc_soundsink.cpp

../temp/moc_soundfeeder.o: moc_soundfeeder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_soundfeeder.o moc_soundfeeder.cpp

../temp/moc_simplelinegraph.o: moc_simplelinegraph.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_simplelinegraph.o moc_simplelinegraph.cpp

../temp/moc_doublegenerator.o: moc_doublegenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_doublegenerator.o moc_doublegenerator.cpp

../temp/moc_booleangenerator.o: moc_booleangenerator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_booleangenerator.o moc_booleangenerator.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/lib/ 
	-$(INSTALL_PROGRAM) "../build/$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

