#############################################################################
# Makefile for building: libDefaultSignalProcessor.so
# Generated by qmake (2.01a) (Qt 4.7.1) on: Tue Mar 1 15:05:33 2011
# Project:  DefaultSignalProcessor.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -o Makefile DefaultSignalProcessor.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I../PipelineVisualizer -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared
LIBS          = $(SUBLIBS)   -L/home/amirul/PipelineVisualizer/DefaultSignalProcessor/../build/ -lPVisualizer -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../temp/

####### Files

SOURCES       = defaultsignalprocessor.cpp \
		doublemultiply.cpp \
		../PipelineVisualizer/pipeproviderprovider.cpp \
		../PipelineVisualizer/signalprocessor.cpp \
		../PipelineVisualizer/sppropertydialog.cpp \
		../PipelineVisualizer/counterkeeper.cpp moc_defaultsignalprocessor.cpp \
		moc_sppropertydialog.cpp
OBJECTS       = ../temp/defaultsignalprocessor.o \
		../temp/doublemultiply.o \
		../temp/pipeproviderprovider.o \
		../temp/signalprocessor.o \
		../temp/sppropertydialog.o \
		../temp/counterkeeper.o \
		../temp/moc_defaultsignalprocessor.o \
		../temp/moc_sppropertydialog.o
DIST          = /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		DefaultSignalProcessor.pro
QMAKE_TARGET  = DefaultSignalProcessor
DESTDIR       = ../build/
TARGET        = libDefaultSignalProcessor.so
TARGETD       = libDefaultSignalProcessor.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../build/$(TARGET)

../build/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../build/ || $(MKDIR) ../build/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../build/



Makefile: DefaultSignalProcessor.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile DefaultSignalProcessor.pro
/usr/lib/qt4/mkspecs/common/g++-multilib.conf:
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile DefaultSignalProcessor.pro

dist: 
	@$(CHK_DIR_EXISTS) ../temp/DefaultSignalProcessor1.0.0 || $(MKDIR) ../temp/DefaultSignalProcessor1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../temp/DefaultSignalProcessor1.0.0/ && $(COPY_FILE) --parents defaultsignalprocessor.h doublemultiply.h ../PipelineVisualizer/pipeproviderprovider.h ../PipelineVisualizer/signalprocessor.h ../PipelineVisualizer/providerplugininterface.h ../PipelineVisualizer/sppropertydialog.h ../PipelineVisualizer/counterkeeper.h ../temp/DefaultSignalProcessor1.0.0/ && $(COPY_FILE) --parents defaultsignalprocessor.cpp doublemultiply.cpp ../PipelineVisualizer/pipeproviderprovider.cpp ../PipelineVisualizer/signalprocessor.cpp ../PipelineVisualizer/sppropertydialog.cpp ../PipelineVisualizer/counterkeeper.cpp ../temp/DefaultSignalProcessor1.0.0/ && (cd `dirname ../temp/DefaultSignalProcessor1.0.0` && $(TAR) DefaultSignalProcessor1.0.0.tar DefaultSignalProcessor1.0.0 && $(COMPRESS) DefaultSignalProcessor1.0.0.tar) && $(MOVE) `dirname ../temp/DefaultSignalProcessor1.0.0`/DefaultSignalProcessor1.0.0.tar.gz . && $(DEL_FILE) -r ../temp/DefaultSignalProcessor1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_defaultsignalprocessor.cpp moc_sppropertydialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_defaultsignalprocessor.cpp moc_sppropertydialog.cpp
moc_defaultsignalprocessor.cpp: ../PipelineVisualizer/providerplugininterface.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		defaultsignalprocessor.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) defaultsignalprocessor.h -o moc_defaultsignalprocessor.cpp

moc_sppropertydialog.cpp: ../PipelineVisualizer/sppropertydialog.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) ../PipelineVisualizer/sppropertydialog.h -o moc_sppropertydialog.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

../temp/defaultsignalprocessor.o: defaultsignalprocessor.cpp defaultsignalprocessor.h \
		../PipelineVisualizer/providerplugininterface.h \
		../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/simpleprocessgraphicsprovidertemplate.h \
		../PipelineVisualizer/widgetedprocessgraphics.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/targetcollection.h \
		../PipelineVisualizer/pipetarget.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h \
		../PipelineVisualizer/pipeprovider.h \
		../PipelineVisualizer/pipefeed.h \
		../PipelineVisualizer/linearrow.h \
		../PipelineVisualizer/pvisual.h \
		../PipelineVisualizer/graphicproxywidgetgraphhack.h \
		doublemultiply.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/defaultsignalprocessor.o defaultsignalprocessor.cpp

../temp/doublemultiply.o: doublemultiply.cpp doublemultiply.h \
		../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/doublemultiply.o doublemultiply.cpp

../temp/pipeproviderprovider.o: ../PipelineVisualizer/pipeproviderprovider.cpp ../PipelineVisualizer/pipeproviderprovider.h \
		../PipelineVisualizer/processgraphics.h \
		../PipelineVisualizer/sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/pipeproviderprovider.o ../PipelineVisualizer/pipeproviderprovider.cpp

../temp/signalprocessor.o: ../PipelineVisualizer/signalprocessor.cpp ../PipelineVisualizer/signalprocessor.h \
		../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/signalprocessor.o ../PipelineVisualizer/signalprocessor.cpp

../temp/sppropertydialog.o: ../PipelineVisualizer/sppropertydialog.cpp ../PipelineVisualizer/sppropertydialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/sppropertydialog.o ../PipelineVisualizer/sppropertydialog.cpp

../temp/counterkeeper.o: ../PipelineVisualizer/counterkeeper.cpp ../PipelineVisualizer/counterkeeper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/counterkeeper.o ../PipelineVisualizer/counterkeeper.cpp

../temp/moc_defaultsignalprocessor.o: moc_defaultsignalprocessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_defaultsignalprocessor.o moc_defaultsignalprocessor.cpp

../temp/moc_sppropertydialog.o: moc_sppropertydialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../temp/moc_sppropertydialog.o moc_sppropertydialog.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/lib/ 
	-$(INSTALL_PROGRAM) "../build/$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

